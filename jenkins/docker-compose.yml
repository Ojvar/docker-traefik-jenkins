version: "3.8"

services:
  jenkins:
    image: jenkins/jenkins:lts
    user: root
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - public-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public-net"
        - "traefik.http.routers.jenkins.rule=Host(`jenkins.ojvar.xyz`)"
        - "traefik.http.routers.jenkins.entrypoints=web"
        - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=public-net"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.ojvar.xyz`)"
      - "traefik.http.routers.jenkins.entrypoints=web"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"

  jenkins-agent-docker:
    image: jenkins/inbound-agent:latest
    environment:
      JENKINS_URL: "http://jenkins:8080"
      JENKINS_AGENT_NAME: "docker-agent"
      JENKINS_SECRET: "fc45027e972a49ca119a3679420a8b00f738ef0fab0967b74197315a44ff9701"  # Set this after creating agent in the jenkins master
      JENKINS_AGENT_WORKDIR: "/home/jenkins/agent"
    volumes:
      - ./jenkins_agent_home:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock   # Optional: access host Docker
    networks:
      - public-net
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
      placement:
        constraints:
          #- node.role == worker
          - node.role == manager

networks:
  public-net:
    external: true
