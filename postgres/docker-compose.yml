version: "3.9"

services:
  postgres:
    image: ojvar/postgres-custom:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data:rw
    networks:
      - public-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public-net"
        - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.postgres.entrypoints=postgres"
        - "traefik.tcp.routers.postgres.service=postgres"
        - "traefik.tcp.routers.postgres.tls.passthrough=true"
        - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=public-net"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.routers.postgres.service=postgres"
      - "traefik.tcp.routers.postgres.tls.passthrough=true"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: ojvar/pgadmin-custom:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ojvar.xyz
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    networks:
      - public-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public-net"
        - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.ojvar.xyz`)"
        - "traefik.http.routers.pgadmin.entrypoints=web"
        - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=public-net"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.ojvar.xyz`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/misc/ping"]
      interval: 30s
      retries: 3
      timeout: 10s

networks:
  public-net:
    external: true